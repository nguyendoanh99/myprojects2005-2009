/**
 * 
 */
package DAO;

import java.io.File;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import org.w3c.dom.Document;

/**
 * @author DangKhoa
 *
 */
public class AbstractDAO {

	/**
	 * 
	 */
	public AbstractDAO() {
		// TODO Auto-generated constructor stub
	}
	public Document KetNoiXML(String TenFile)
	{
		Document doc = null;
		DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
		// To get a validating parser
	    factory.setValidating(false);
	    // To get one that understands namespaces
	    factory.setNamespaceAware(true);
	    
	    try {
	        // Get DocumentBuilder
	        DocumentBuilder builder = factory.newDocumentBuilder();
	        // Parse and load into memory the Document
	        doc = builder.parse( new File(TenFile));

	      } catch (SAXParseException spe) {
	        // Error generated by the parser
	        System.out.println("\n** Parsing error , line " + spe.getLineNumber()
	                           + ", uri " + spe.getSystemId());
	        System.out.println(" " + spe.getMessage() );
	        // Use the contained exception, if any
	        Exception x = spe;
	        if (spe.getException() != null)
	          x = spe.getException();
	        x.printStackTrace();
	      } catch (SAXException sxe) {
	        // Error generated during parsing
	        Exception x = sxe;
	        if (sxe.getException() != null)
	          x = sxe.getException();
	        x.printStackTrace();
	      } catch (ParserConfigurationException pce) {
	        // Parser with specified options can't be built
	        pce.printStackTrace();
	      } catch (IOException ioe) {
	        // I/O error
	        ioe.printStackTrace();
	      }
	      
		return doc;
	}
}
