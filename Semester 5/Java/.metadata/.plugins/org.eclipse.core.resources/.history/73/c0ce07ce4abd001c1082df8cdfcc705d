package DAO;

import java.text.DateFormat;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Locale;

import org.w3c.dom.Node;

import DTO.GIAOVIENDTO;
import DTO.HOCSINHDTO;
import DTO.LOPHOCDTO;

public class LOPHOCDAO extends AbstractDAO{

	public LOPHOCDAO() {
		// TODO Auto-generated constructor stub
		super();
	}
	public LOPHOCDAO(Node node)
	{
		super(node);
	}
	public List<LOPHOCDTO> getDanhSachLopHoc(Node node)
	{
		List<LOPHOCDTO> kq = new ArrayList<LOPHOCDTO>();
		node = node.getFirstChild();
		
		while (node != null)
		{
			if (node.getNodeType() == Node.ELEMENT_NODE)
			{
				kq.add(getLopHoc(node));
			}
			node = node.getNextSibling();
		}
		return kq;
	}
	public LOPHOCDTO getLopHoc(Node node)
	{
		LOPHOCDTO kq = new LOPHOCDTO();
		
		Node item = node.getFirstChild();
		
		while (item != null)
		{
			if (item.getNodeType() == Node.ELEMENT_NODE)
			{
				String name = item.getNodeName();
				
				if (name.compareToIgnoreCase("MaLop") == 0)
					kq.setMaLop(item.getFirstChild().getNodeValue());
				else
					if (name.compareToIgnoreCase("TenLop") == 0)
						kq.setTenLop(item.getFirstChild().getNodeValue());
					else
						if (name.compareToIgnoreCase("GiaoVien") == 0)
						{
							GIAOVIENDAO giaoviendao = new GIAOVIENDAO(item);
							GIAOVIENDTO giaovien = giaoviendao.getGiaoVien()							
							kq.setGiaoVien(giaovien);
						}				
						else
							if (name.compareToIgnoreCase("PhongHoc") == 0)
								kq.setPhongHoc(item.getFirstChild().getNodeValue());
							else
								if (name.compareToIgnoreCase("GioHoc") == 0)
								{
									String value = item.getFirstChild().getNodeValue();
									DateFormat df = DateFormat.getTimeInstance(DateFormat.SHORT, new Locale("vi", "VN"));
									try
									{
										Date d = df.parse(value);
										kq.setGioHoc(d);
									}
									catch (ParseException pe)
									{
										System.out.println(pe.toString());
									}
								}
								else
									if (name.compareToIgnoreCase("DanhSachHocSinh") == 0)
									{
										List<HOCSINHDTO> hocsinh = null;
										kq.setDanhSachHocSinh(hocsinh);
									}	
			}
			item = item.getNextSibling();
		}	
		
		return kq;
	}
}
